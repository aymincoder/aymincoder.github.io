<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Up Up Up</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-03-31T12:04:00.302Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>hizhm</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微前端分析</title>
    <link href="http://example.com/2021/03/31/%E5%BE%AE%E5%89%8D%E7%AB%AF/"/>
    <id>http://example.com/2021/03/31/%E5%BE%AE%E5%89%8D%E7%AB%AF/</id>
    <published>2021-03-31T12:00:00.000Z</published>
    <updated>2021-03-31T12:04:00.302Z</updated>
    
    
    
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>关于HTTP</title>
    <link href="http://example.com/2021/03/20/%E5%85%B3%E4%BA%8EHTTP/"/>
    <id>http://example.com/2021/03/20/%E5%85%B3%E4%BA%8EHTTP/</id>
    <published>2021-03-20T10:21:25.000Z</published>
    <updated>2021-03-31T12:03:15.707Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、网络分层"><a href="#一、网络分层" class="headerlink" title="一、网络分层"></a>一、网络分层</h1><h1 id="二、具体协议分析"><a href="#二、具体协议分析" class="headerlink" title="二、具体协议分析"></a>二、具体协议分析</h1><p>css6</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、网络分层&quot;&gt;&lt;a href=&quot;#一、网络分层&quot; class=&quot;headerlink&quot; title=&quot;一、网络分层&quot;&gt;&lt;/a&gt;一、网络分层&lt;/h1&gt;&lt;h1 id=&quot;二、具体协议分析&quot;&gt;&lt;a href=&quot;#二、具体协议分析&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
    <category term="HTTP" scheme="http://example.com/tags/HTTP/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript的面向对象</title>
    <link href="http://example.com/2021/03/17/javaScript%E7%9A%84%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <id>http://example.com/2021/03/17/javaScript%E7%9A%84%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</id>
    <published>2021-03-17T10:21:25.000Z</published>
    <updated>2021-03-31T12:28:02.510Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、什么是面向对象"><a href="#一、什么是面向对象" class="headerlink" title="一、什么是面向对象"></a>一、什么是面向对象</h2><p>编程思想分为两大块，一个是面向过程，一个面向对象</p><h3 id="a-面向过程（process-oriented-programming）POP"><a href="#a-面向过程（process-oriented-programming）POP" class="headerlink" title="a.面向过程（process-oriented programming）POP"></a>a.面向过程（process-oriented programming）POP</h3><ul><li>定义：面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一一实现，使用的时候再一个一个的调用就可以了</li><li>举例：将大象装进冰箱，面向过程的做法。<ol><li>打开冰箱门 </li><li>大象装进去 </li><li>关上冰箱门</li></ol></li></ul><h3 id="b-面向对象（object-Oriented-Programming）OOP"><a href="#b-面向对象（object-Oriented-Programming）OOP" class="headerlink" title="b.面向对象（object Oriented Programming）OOP"></a>b.面向对象（object Oriented Programming）OOP</h3><ul><li>定义：面向对象就是把事务分成一个个对象，然后由对象之间分工和合作。</li><li>举例：将大象装进冰箱，面向对象的做法。(先找出对象，并写出这些对象的功能）<ol><li>大象对象 （进去）</li><li>冰箱对象（ 打开、关闭）</li><li>使用大象和冰箱的功能  </li></ol></li></ul><p><strong>面向对象是以对象功能划分问题，而不是步骤。</strong></p><h3 id="c-面向对象的特性"><a href="#c-面向对象的特性" class="headerlink" title="c.面向对象的特性"></a>c.面向对象的特性</h3><ul><li>封装（把类内部的信息统一保护起来，防止外包随意修改内部数据，保证数据的安全性，保证外部尽可能正确地使用这个类）</li><li>继承（爸爸和儿子，继承了姓氏）</li><li>多态（同一个对象，在不同的时刻，可以提现不同的状态）</li></ul><h3 id="d-面向过程和面向对象的对比"><a href="#d-面向过程和面向对象的对比" class="headerlink" title="d.面向过程和面向对象的对比"></a>d.面向过程和面向对象的对比</h3><table><thead><tr><th>表头</th><th>面向过程</th><th align="left">面向对象</th></tr></thead><tbody><tr><td>优点</td><td>性能比面向对象高，适合跟硬件联系很紧密的东西，例如单片机就采用面向过程编程</td><td align="left">易维护、易复用、易扩展          由于面向对象有封装、继承、多态性的特性，可以设计出低耦合的系统，使系统更灵活，更加易于维护</td></tr><tr><td>缺点</td><td>没有面向对象易维护、易复用、易扩展</td><td align="left">性能比面向过程低</td></tr></tbody></table><h2 id="二-面向对象、ES6中的类和实例"><a href="#二-面向对象、ES6中的类和实例" class="headerlink" title="二.面向对象、ES6中的类和实例"></a>二.面向对象、ES6中的类和实例</h2><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>现实生活中：万物皆对象，对象是一个具体的事物,  看得见摸得着的实物，例如一本书，一杯水，一个人<br>在JavaScript中：对象是一组无序的相关属性和方法的集合，所有的事物都是对象。例如字符串、数组、函数等<br>对象是由属性和方法组成的：</p><ul><li>属性：事物的特征</li><li>方法：事物的行为</li></ul><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p>ES6中新增了类的概念，可以使用class关键字声明一个类，之后以这个类来实例化对象。<br>类抽象了对象的公共部分，它泛指某一大类（Class）<br>对象是特指某一个，通过类实例化一个具体的对象</p><p><strong>面向对象的思维特点</strong></p><ol><li>抽取（抽象）对象共用的属性和行为组织（封装）成一个类（模板）</li><li>对类进行实例化，获取类的对象</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、什么是面向对象&quot;&gt;&lt;a href=&quot;#一、什么是面向对象&quot; class=&quot;headerlink&quot; title=&quot;一、什么是面向对象&quot;&gt;&lt;/a&gt;一、什么是面向对象&lt;/h2&gt;&lt;p&gt;编程思想分为两大块，一个是面向过程，一个面向对象&lt;/p&gt;
&lt;h3 id=&quot;a-面向过</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
</feed>
